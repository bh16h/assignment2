Annotations:
- Git Lab Tutorials were done on September 18 (photos attached)
- GitHub Account was set up around September 17 or 18.


1) Paste the console output you saved at the end of step 3.C (2 points)

- Counting objects: 6, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (5/5), done.
Writing objects: 100% (6/6), 648 bytes | 648.00 KiB/s, done.
Total 6 (delta 2), reused 0 (delta 0)
remote: Resolving deltas: 100% (2/2), completed with 1 local object.
To https://github.com/bh16h/assignment2.git
   bcc15a5..746f204  master -> master

2) How many commits have been done to the repository (not only by you, but by anyone) so far? Write the git command you used to get this information (4 points)

- The repository has 11 commits (using git shortlog | grep -E '^[^ ]').


3) When was the README.md  file modified last? Write the git command you used to get this information (4 points)

- It was last modified Sept 18 14:25 (using ls -l README.md).

4) Mention two reasons why branches are used in a Git repository (4 points)

- They are used to branch out from the original code base and isolate work from others.
- They are used to help Git easily merge versions later on.

5) What is the difference between git log and git status? (4 points)

- The git log command displays committed snapshots and lets you list the project history, filter it, and search for specific changes, while git status lets you inspect the working directory and the staging area, git log only operates on the committed history.

6) What command would you use to see the commits where “Vehicle.h” was one of the committed files? (4 points)

- You use "git log --follow -- Vehicle.h" or "git log --all Vehicle.h".

7) What command would you use to see the commits whose commit message contains the word “file”? (4 points)

- You use "git log --all --grep='file'".

8) In the context of object-oriented programming (I) What is inheritance? (II) What is polymorphism? (III) What is encapsulation? (6 points)

I: Inheritance refers to the mechanism where you can to derive a class from another class for a hierarchy of classes that share a set of attributes and methods.

II: Polymorphism is the ability of an object to take on many forms.

III: Encapsulation is defined as the wrapping up of data under a single unit. It is the mechanism that binds together code and the data it manipulates.

9)  What is the main difference between the “Dictator and Lieutenants” workflow and the “Integration manager” workflow? (5 points)

- The Dictator and Lieutenants workflow is a variant of a multiple-repository workflow used in huge projects. Integration managers are called lieutenants while each has their own integration manager called a dictator. The benevolent dictator pushes from their directory to a reference repository from which all the collaborators need to pull.

- The Integration manager workflow is a very common workflow with hub-based tools like GitHub or GitLab, where it’s easy to fork a project and push your changes into your forked project. This workflow is beneficial since you can continue to work, and the maintainer of the main repository can pull in your changes at any time.

10) How would a team of 100 developers benefit from following the “Dictator and Lieutenants” workflow instead of the “Centralized” workflow? (5 points)

-It would benefit them to use the Dictator and Lieutenants workflow since it is built for projects with a high hierarchy or high number of developers. This workflow would allow the dictators to delegate the work and collect subsets of code at multiple points before integrating them.

